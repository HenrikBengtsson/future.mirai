on: [push, pull_request]

name: R-CMD-check

jobs:
  R-CMD-check:
    if: "! contains(github.event.head_commit.message, '[ci skip]')"    

    timeout-minutes: 30

    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }}) ${{ matrix.config.label }}

    strategy:
      fail-fast: false
      matrix:
        config:
           - {os: windows-latest, r: 'devel'    }
           - {os: windows-latest, r: 'release'  }
           - {os: windows-latest, r: 'oldrel'   }
           - {os: macOS-latest,   r: 'devel'    }
           - {os: macOS-latest,   r: 'release'  }
           - {os: macOS-latest,   r: 'oldrel'   }
           - {os: ubuntu-latest,  r: 'devel'    }
           - {os: ubuntu-latest,  r: 'devel'    , mirai: 'devel', label: "mirai & nanonext devel" }
           - {os: ubuntu-latest,  r: 'release'  }
           - {os: ubuntu-latest,  r: 'oldrel'   }
#           - {os: ubuntu-latest,  r: 'oldrel-1' }
#           - {os: ubuntu-latest,  r: 'oldrel-2' }
           - {os: ubuntu-latest,  r: '3.6'      }
# #         - {os: ubuntu-latest,  r: 'release'  , language: ko,    label: ko    }
#           - {os: ubuntu-latest,  r: 'release'  , language: zh_CN, label: zh_CN }
# #         - {os: ubuntu-latest,  r: 'release'  , language: zh_TW, label: zh_TW }

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      ## Test in other locale (optional)
      LANGUAGE: ${{ matrix.config.language }}
      ## R CMD check
      _R_CHECK_CRAN_INCOMING_: false
      _R_CHECK_LENGTH_1_CONDITION_: true
      _R_CHECK_LENGTH_1_LOGIC2_: true
      _R_CHECK_MATRIX_DATA_: true
      _R_CHECK_SUGGESTS_ONLY_: true
      _R_CHECK_THINGS_IN_TEMP_DIR_: true
      RCMDCHECK_ERROR_ON: note
      ## Specific to futures
      R_FUTURE_RNG_ONMISUSE: error

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Check against mirai development version?
        if: matrix.config.mirai == 'devel'
        run: |
          install.packages("remotes")
          remotes::install_github("shikokuchuo/nanonext")
          remotes::install_github("shikokuchuo/mirai")
        shell: Rscript {0}
 
      - name: Session info
        run: |
          options(width = 100)
          parallelly::availableCores(which = "all")
          sapply(c(physical_cores = FALSE, logical_cores = TRUE), parallel::detectCores)
          if (require(RhpcBLASctl, quietly=TRUE)) c(get_num_procs = get_num_procs(), get_num_cores = get_num_cores(), blas_get_num_procs = blas_get_num_procs(), omp_get_num_procs = omp_get_num_procs(), omp_get_max_threads = omp_get_max_threads())
          capabilities()
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
          ## Verify LANGUAGE settings by generating a translatable error
          cat(sprintf("LANGUAGE=%s\n", sQuote(Sys.getenv("LANGUAGE"))))
          cat(sprintf("locales: %s\n", sQuote(Sys.getlocale())))
          tryCatch(log("a"), error = conditionMessage)
        shell: Rscript {0}
        
      - uses: r-lib/actions/check-r-package@v2
        with:
          error-on: '"note"'
